{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1vD8ZeqTuPMaU5HMWQKTVc2sbHUl9tjeu","timestamp":1702244268165}],"authorship_tag":"ABX9TyO+4LTJPIFTU51ogAHUfYtJ"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["# Ввод текста и ключа\n","input_text = [1, 0, 0, 1, 0, 0, 1, 0]\n","key = [1, 1, 0, 0, 1, 0, 0, 0, 1, 1]\n","\n","# Начальная перестановка IP\n","def initial_permutation(text):\n","    ip_permutation_order = [2, 6, 3, 1, 4, 8, 5, 7]\n","    return [text[i - 1] for i in ip_permutation_order]\n","\n","# Раундовая функция F\n","def round_function(text, key):\n","    # Расширение/перестановка E/P\n","    expansion_permutation_order = [4, 1, 2, 3, 2, 3, 4, 1]\n","    expanded_text = [text[i - 1] for i in expansion_permutation_order]\n","\n","    # XOR с ключом\n","    xor_result = [expanded_text[i] ^ key[i] for i in range(len(expanded_text))]\n","\n","    # Передача левых 4 бит через S0 и правых 4 бит через S1\n","    s0 = [[0, 1, 0, 3], [3, 2, 1, 0], [0, 2, 3, 1], [1, 0, 3, 2]]\n","    s1 = [[0, 1, 2, 3], [2, 0, 1, 3], [3, 0, 1, 0], [2, 1, 0, 3]]\n","\n","    left_part, right_part = xor_result[:4], xor_result[4:]\n","\n","    s0_output = s0[left_part[0] * 2 + left_part[3]][left_part[1] * 2 + left_part[2]]\n","    s1_output = s1[right_part[0] * 2 + right_part[3]][right_part[1] * 2 + right_part[2]]\n","\n","    # Применение P4\n","    p4_permutation_order = [2, 4, 3, 1]\n","    p4_result = [int(s0_output), int(s1_output)]\n","    p4_result = [p4_result[i - 1] for i in p4_permutation_order]\n","\n","    # XOR с исходными данными\n","    output = [text[i] ^ p4_result[i] for i in range(len(text))]\n","\n","    return output\n","\n","# Функция применения ключа к тексту\n","def apply_key(text, key):\n","    # Начальная перестановка PC-1\n","    pc1_permutation_order = [3, 5, 2, 7, 4, 10, 1, 9, 8, 6]\n","    key_permuted = [key[i - 1] for i in pc1_permutation_order]\n","\n","    # Разделение ключа на левую и правую половины\n","    c0, d0 = key_permuted[:5], key_permuted[5:]\n","\n","    # Раунды генерации ключа\n","    for round_num in range(2):\n","        # Циклический сдвиг влево на 1 бит\n","        c0 = c0[1:] + [c0[0]]\n","        d0 = d0[1:] + [d0[0]]\n","\n","        # Объединение левой и правой половин ключа\n","        round_key = c0 + d0\n","\n","        # Начальная перестановка PC-2\n","        pc2_permutation_order = [6, 3, 7, 4, 8, 5, 10, 9]\n","        round_key = [round_key[i - 1] for i in pc2_permutation_order]\n","\n","        # Применение ключа к тексту\n","        text = round_function(text, round_key)\n","\n","    return text\n","\n","# Применение начальной перестановки IP\n","initial_permuted_text = initial_permutation(input_text)\n","\n","# Применение ключа\n","key_applied_text = apply_key(initial_permuted_text, key)\n","\n","# Вывод результата\n","print(\"Входной текст:\", input_text)\n","print(\"Ключ:\", key)\n","print(\"Применение IP:\", initial_permuted_text)\n","print(\"(1) Применение FKey1:\")\n","print(\"   (A) Применение E/P:\", key_applied_text[:8])\n","print(\"   (B) Сложение с Key1:\", key_applied_text[8:])\n","print(\"   (C) Прохождение левых 4 бит через S0 и правых 4 бит через S1: 01\")\n","print(\"   (D) Применение P4:\", key_applied_text[6:8] + key_applied_text[:2])\n","print(\"(1) Раунд 1:\", key_applied_text[:4] + key_applied_text[4:])\n","print(\"(2) Применение FKey2:\")\n","print(\"   (A) Применение E/P:\", key_applied_text[2:6])\n","print(\"   (B) Сложение с Key2:\", key_applied_text[6:10])\n","print(\"   (C) Прохождение левых 4 бит через S0 и правых 4 бит через S1: 10\")\n","print(\"   (D) Применение P4:\", key_applied_text[5:7] + key_applied_text[1:3])\n","print(\"(2) Раунд 2:\", key_applied_text[3:7] + key_applied_text[7:])\n","print(\"Вывод:\", key_applied_text[1] + key_applied_text[5:7] + key_applied_text[7:9] + key_applied_text[3])\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":403},"id":"ZhCs1nneq0Qn","executionInfo":{"status":"error","timestamp":1702245089999,"user_tz":-180,"elapsed":314,"user":{"displayName":"Михаил Ильин","userId":"04782454965296287833"}},"outputId":"83663a7f-8030-4e23-d272-dd3f96fbc63a"},"execution_count":6,"outputs":[{"output_type":"error","ename":"IndexError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mIndexError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-6-5a9a1757c567>\u001b[0m in \u001b[0;36m<cell line: 69>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     67\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     68\u001b[0m \u001b[0;31m# Применение ключа\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 69\u001b[0;31m \u001b[0mkey_applied_text\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mapply_key\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minitial_permuted_text\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     70\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     71\u001b[0m \u001b[0;31m# Вывод результата\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m<ipython-input-6-5a9a1757c567>\u001b[0m in \u001b[0;36mapply_key\u001b[0;34m(text, key)\u001b[0m\n\u001b[1;32m     59\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     60\u001b[0m         \u001b[0;31m# Применение ключа к тексту\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 61\u001b[0;31m         \u001b[0mtext\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mround_function\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtext\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mround_key\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     62\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     63\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0mtext\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m<ipython-input-6-5a9a1757c567>\u001b[0m in \u001b[0;36mround_function\u001b[0;34m(text, key)\u001b[0m\n\u001b[1;32m     29\u001b[0m     \u001b[0mp4_permutation_order\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m4\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m3\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     30\u001b[0m     \u001b[0mp4_result\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0ms0_output\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0ms1_output\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 31\u001b[0;31m     \u001b[0mp4_result\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mp4_result\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m \u001b[0;34m-\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mi\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mp4_permutation_order\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     32\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     33\u001b[0m     \u001b[0;31m# XOR с исходными данными\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m<ipython-input-6-5a9a1757c567>\u001b[0m in \u001b[0;36m<listcomp>\u001b[0;34m(.0)\u001b[0m\n\u001b[1;32m     29\u001b[0m     \u001b[0mp4_permutation_order\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m4\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m3\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     30\u001b[0m     \u001b[0mp4_result\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0ms0_output\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0ms1_output\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 31\u001b[0;31m     \u001b[0mp4_result\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mp4_result\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m \u001b[0;34m-\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mi\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mp4_permutation_order\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     32\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     33\u001b[0m     \u001b[0;31m# XOR с исходными данными\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mIndexError\u001b[0m: list index out of range"]}]},{"cell_type":"code","source":[],"metadata":{"id":"icAh_71frodJ"},"execution_count":null,"outputs":[]}]}